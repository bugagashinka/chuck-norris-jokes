{"version":3,"sources":["assets/images/home-page/joke-card/heart.svg","assets/images/home-page/joke-card/heart-inactive.svg","assets/images/home-page/joke-card/text-icon.svg","redux/reducers/uiStateReducer.js","components/Header/Header.jsx","services/jokesService.js","services/localStorageService.js","utils/compare.js","redux/reducers/jokesReducer.js","redux/reducers/categoriesReducer.js","ui/ErrorMessage/ErrorMessage.jsx","ui/Loader/Loader.jsx","components/Categories/Categories.jsx","components/FilterForm/FilterForm.jsx","components/JokeCard/JokeCard.jsx","utils/date.js","components/FavList/FavList.jsx","components/JokesList/JokesList.jsx","components/App/App.jsx","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","uiComponents","componentsUIState","showOnMobile","error","state","action","type","component","loading","favListComponentState","setError","componentName","toggleLoader","toggleFavList","connect","isButtonVisible","uiState","props","styleMenuButton","classNames","stylemenuButton","active","menuButton","className","onClick","BASE_URL","INTERNET_DISCONNECTED_ERROR","errorHandler","response","a","Error","status","json","originError","Promise","reject","getResource","url","fetch","headers","res","ok","console","getJokeByCategory","category","getRandomJoke","params","joke","transformJoke","getCategories","searchJoke","query","result","map","categories","createdAt","created_at","iconUrl","icon_url","id","updatedAt","updated_at","value","loved","addFavouriteJokes","jokes","localStorage","setItem","formatJokes","getFavouriteJokes","getItem","JSON","parse","e","stringify","intersectionBy","list1","list2","prop","set","Set","item","filter","has","ADD_JOKES","ADD_FAV_JOKES","filterTypeSet","initialState","filterType","list","favourites","payload","jokeList","jokeId","field","addJokes","removeFavouriteJoke","updateJokeField","markFavJokes","favouriteJokes","jokesLocalStorage","intersection","compare","getJokeService","data","dispatch","service","jokesService","toggleJokeLove","some","favJoke","updatedFavJokeList","currentCategory","createCategoryList","selectCategory","categoryName","ErrorMessage","message","showError","Loader","isLoading","initCategories","firstCategory","length","show","useEffect","clickCategoryHandler","categoryStyle","button","categoryElementList","key","showCategories","setFilterType","toUpperCase","updateQueryString","searchText","getJokes","bind","updateFilterType","target","checked","name","label","inputId","onChange","defaultChecked","htmlFor","randomInput","categoryInput","searchInput","isActiveFilter","styleFilterType","mainClass","classList","onKeyDown","preventDefault","placeholder","date","prefix","styleClassPrefix","showTag","text","cardHeader","src","heartIcon","heartInactiveIcon","alt","cardBody","style","backgroundImage","textIcon","href","tagElementList","tag","cardFooter","Math","round","Date","getTime","loadFavouriteJokes","styleFavouritePanel","asideHeader","stopPropagation","cardElementList","favJokeData","showContent","jokeElementList","jokeData","showJokeList","App","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81fad1e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart.2cedafc9.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-inactive.3369cbd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/text-icon.71773f6e.svg\";","const SET_ERROR = \"uiStateReducer/SET_ERROR\";\r\nconst CLEAR_ERROR = \"uiStateReducer/CLEAR_ERROR\";\r\nconst TOGGLE_LOADER = \"uiStateReducer/TOGGLE_LOADER\";\r\nconst TOGGLE_FAV_LIST = \"uiStateReducer/TOGGLE_FAV_LIST\";\r\n\r\nconst uiComponents = {\r\n  APP_COMPONENT: \"appComponent\",\r\n  FAV_LIST_COMPONENT: \"favListComponent\",\r\n  JOKES_LIST_COMPONENT: \"jokesListComponent\",\r\n  CATEGORY_LIST_COMPONENT: \"categoryListComponent\",\r\n};\r\n\r\nconst componentsUIState = {\r\n  [uiComponents.FAV_LIST_COMPONENT]: {\r\n    showOnMobile: false,\r\n  },\r\n  error: {\r\n    [uiComponents.APP_COMPONENT]: null,\r\n    [uiComponents.FAV_LIST_COMPONENT]: null,\r\n    [uiComponents.JOKES_LIST_COMPONENT]: null,\r\n    [uiComponents.CATEGORY_LIST_COMPONENT]: null,\r\n  },\r\n  loading: {\r\n    [uiComponents.FAV_LIST_COMPONENT]: false,\r\n    [uiComponents.JOKES_LIST_COMPONENT]: false,\r\n    [uiComponents.CATEGORY_LIST_COMPONENT]: true,\r\n  },\r\n};\r\n\r\n// Reducers\r\n\r\nconst error = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ERROR:\r\n      return { ...state, [action.component]: action.error };\r\n    case CLEAR_ERROR:\r\n      return { ...state, [action.component]: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst loading = (state, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_LOADER:\r\n      return { ...state, [action.component]: !state[action.component] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst favListComponentState = (state, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_FAV_LIST:\r\n      return { ...state, showOnMobile: !state.showOnMobile };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst uiState = (state = componentsUIState, action) => {\r\n  return {\r\n    [uiComponents.FAV_LIST_COMPONENT]: favListComponentState(state[uiComponents.FAV_LIST_COMPONENT], action),\r\n    error: error(state.error, action),\r\n    loading: loading(state.loading, action),\r\n  };\r\n};\r\n\r\n// Actions creators\r\nconst setError = (componentName, error) => ({ type: SET_ERROR, component: componentName, error });\r\n\r\nconst clearError = (componentName) => ({ type: CLEAR_ERROR, component: componentName });\r\n\r\nconst toggleLoader = (componentName) => ({ type: TOGGLE_LOADER, component: componentName });\r\n\r\nconst toggleFavList = () => ({ type: TOGGLE_FAV_LIST });\r\n\r\nexport { uiState as default, setError, toggleLoader, toggleFavList, uiComponents, clearError };\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleFavList, uiComponents } from \"redux/reducers/uiStateReducer\";\r\n\r\nconst Header = (props) => {\r\n  const { isButtonVisible, toggleFavList } = props;\r\n  const styleMenuButton = classNames(\"header__menu-btn\", \"menu-btn button\");\r\n\r\n  const menuClickHandler = () => toggleFavList();\r\n\r\n  const stylemenuButton = classNames(styleMenuButton, { active: isButtonVisible });\r\n  const menuButton = (\r\n    <button className={stylemenuButton} onClick={menuClickHandler}>\r\n      Favourite\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <header className=\"header home-page__header\">\r\n      <div className=\"container\">\r\n        <div className=\"header__inner\">\r\n          <h1 className=\"header__headline\">MSI 2020</h1>\r\n          {menuButton}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isButtonVisible: state.uiState[uiComponents.FAV_LIST_COMPONENT].showOnMobile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { toggleFavList })(Header);\r\n","const BASE_URL = \"https://api.chucknorris.io/jokes/\";\r\nconst RANDOM_JOKE_ENDPOINT = \"random/\";\r\nconst CATEGORIES_ENPOINT = \"categories/\";\r\nconst SEARCH_ENDPOINT = \"search/\";\r\n\r\nconst CATEGORY_PARAM = \"?category\";\r\nconst QUERY_PARAM = \"?query\";\r\n\r\nconst CLIENT_ERROR__MIN_CODE = 400;\r\nconst CLIENT_ERROR__MAX_CODE = 499;\r\nconst INTERNET_DISCONNECTED_ERROR = \"INTERNET_DISCONNECTED_ERROR\";\r\n\r\nconst errorHandler = async (response) => {\r\n  let error = new Error(`${response.status}: Something went wrong, result couln't be provided`);\r\n  if (response.status >= CLIENT_ERROR__MIN_CODE && response.status <= CLIENT_ERROR__MAX_CODE) {\r\n    error.originError = await response.json();\r\n  }\r\n  return Promise.reject(error);\r\n};\r\n\r\nconst getResource = async (url) => {\r\n  try {\r\n    const res = await fetch(url, {\r\n      headers: {\r\n        \"Accept-Language\": \"en-US;q=0.8\",\r\n      },\r\n    });\r\n\r\n    if (!res.ok) {\r\n      // cases with 4xx/5xx status code\r\n      return errorHandler(res);\r\n    }\r\n    return res.json();\r\n  } catch (e) {\r\n    // internet connection case\r\n    console.error(e);\r\n    throw new Error({ status: INTERNET_DISCONNECTED_ERROR });\r\n  }\r\n};\r\n\r\nconst getJokeByCategory = async (category = \"\") => {\r\n  return getRandomJoke(category);\r\n};\r\n\r\nconst getRandomJoke = async (category) => {\r\n  const params = category ? `${CATEGORY_PARAM}=${category}` : \"\";\r\n  const joke = await getResource(`${BASE_URL}${RANDOM_JOKE_ENDPOINT}${params}`);\r\n  return [transformJoke(joke)];\r\n};\r\n\r\nconst getCategories = async () => {\r\n  return getResource(`${BASE_URL}${CATEGORIES_ENPOINT}`);\r\n};\r\n\r\nconst searchJoke = async (query) => {\r\n  const params = query ? `${QUERY_PARAM}=${query}` : \"\";\r\n  if (!params) return;\r\n  const res = await getResource(`${BASE_URL}${SEARCH_ENDPOINT}${params}`);\r\n  return res.result.map(transformJoke);\r\n};\r\n\r\nconst transformJoke = (joke) => {\r\n  const { categories, created_at, icon_url, id, updated_at, url, value } = joke;\r\n  return {\r\n    categories,\r\n    createdAt: created_at,\r\n    iconUrl: icon_url,\r\n    id,\r\n    updatedAt: updated_at,\r\n    url,\r\n    value,\r\n    loved: false,\r\n  };\r\n};\r\n\r\nexport { getRandomJoke, getJokeByCategory, searchJoke, getCategories, INTERNET_DISCONNECTED_ERROR };\r\n","const FAV_JOKES_KEY = \"FAV_JOKES\";\r\n\r\nconst addFavouriteJokes = (jokes = []) => localStorage.setItem(FAV_JOKES_KEY, formatJokes(jokes));\r\n\r\nconst getFavouriteJokes = () => formatJokes(localStorage.getItem(FAV_JOKES_KEY)) || [];\r\n\r\nconst clear = () => localStorage.clear();\r\n\r\nconst formatJokes = (jokes) => {\r\n  try {\r\n    return JSON.parse(jokes);\r\n  } catch (e) {\r\n    return JSON.stringify(jokes);\r\n  }\r\n};\r\n\r\nexport { addFavouriteJokes, getFavouriteJokes };\r\n","export const intersectionBy = (list1 = [], list2 = [], prop) => {\r\n  const set = new Set(list1.map((item) => item[prop]));\r\n  return list2.filter((item) => set.has(item[prop])).map((item) => item[prop]);\r\n};\r\n","import { jokesLocalStorage, jokesService } from \"services\";\r\nimport { compare } from \"utils\";\r\nimport { toggleLoader, setError, clearError, uiComponents } from \"./uiStateReducer\";\r\n\r\n// Action types\r\nconst ADD_JOKES = \"jokesReducer/ADD_JOKES\";\r\nconst ADD_FAV_JOKES = \"jokesReducer/ADD_FAV_JOKES\";\r\nconst REMOVE_FAV_JOKE = \"jokesReducer/REMOVE_FAV_JOKE\";\r\nconst UPDATE_QUERY_STRING = \"jokesReducer/UPDATE_QUERY_STRING\";\r\nconst SET_FILTER_TYPE = \"jokesReducer/SET_FILTER_TYPE\";\r\nconst UPDATE_JOKE_FIELD = \"jokesReducer/UPDATE_JOKE_FIELD\";\r\nconst filterTypeSet = {\r\n  RANDOM: \"RANDOM\",\r\n  CATEGORY: \"CATEGORY\",\r\n  SEARCH: \"SEARCH\",\r\n};\r\n\r\n// Jokes reducers\r\nconst initialState = {\r\n  query: \"\",\r\n  filterType: filterTypeSet.RANDOM,\r\n  list: [],\r\n  favourites: [],\r\n};\r\n\r\nconst query = (state = initialState.query, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_QUERY_STRING:\r\n      return action.payload.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filterType = (state = initialState.filterType, action) => {\r\n  switch (action.type) {\r\n    case SET_FILTER_TYPE:\r\n      return action.payload.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst jokeList = (state = initialState.list, action) => {\r\n  switch (action.type) {\r\n    case ADD_JOKES:\r\n      return [...action.payload.value];\r\n    case UPDATE_JOKE_FIELD:\r\n      const { jokeId, field, value } = action.payload.value;\r\n      return state.map((item) => {\r\n        if (item.id === jokeId) {\r\n          return { ...item, [field]: value };\r\n        }\r\n        return item;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst favourites = (state = initialState.favourites, action) => {\r\n  switch (action.type) {\r\n    case ADD_FAV_JOKES:\r\n      return [...action.payload.value, ...state];\r\n    case REMOVE_FAV_JOKE:\r\n      return state.filter(({ id }) => id !== action.payload.value);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst jokesReducer = (state = initialState, action) => {\r\n  return {\r\n    query: query(state.query, action),\r\n    filterType: filterType(state.filterType, action),\r\n    list: jokeList(state.list, action),\r\n    favourites: favourites(state.favourites, action),\r\n  };\r\n};\r\n\r\n// Action creators\r\nconst updateQueryString = (searchText) => ({\r\n  type: UPDATE_QUERY_STRING,\r\n  payload: { value: searchText },\r\n});\r\n\r\nconst setFilterType = (filter) => ({\r\n  type: SET_FILTER_TYPE,\r\n  payload: { value: filter.toUpperCase() },\r\n});\r\n\r\nconst addJokes = (jokes) => ({\r\n  type: ADD_JOKES,\r\n  payload: { value: jokes },\r\n});\r\n\r\nconst addFavouriteJokes = (jokes) => ({\r\n  type: ADD_FAV_JOKES,\r\n  payload: { value: jokes },\r\n});\r\n\r\nconst removeFavouriteJoke = (id) => ({\r\n  type: REMOVE_FAV_JOKE,\r\n  payload: { value: id },\r\n});\r\n\r\nconst updateJokeField = (jokeId, field, value) => ({\r\n  type: UPDATE_JOKE_FIELD,\r\n  payload: { value: { jokeId, field, value } },\r\n});\r\n\r\n// Thunk creators\r\nconst markFavJokes = (jokes = []) => {\r\n  const favouriteJokes = jokesLocalStorage.getFavouriteJokes();\r\n  const intersection = new Set(compare.intersectionBy(favouriteJokes, jokes, \"id\"));\r\n\r\n  return jokes.map((joke) => {\r\n    if (intersection.has(joke.id)) joke.loved = true;\r\n    return joke;\r\n  });\r\n};\r\n\r\nconst getJokeService = async (data, dispatch, service) => {\r\n  dispatch(toggleLoader(uiComponents.JOKES_LIST_COMPONENT));\r\n\r\n  try {\r\n    dispatch(clearError(uiComponents.JOKES_LIST_COMPONENT));\r\n    const jokeList = markFavJokes(await service(data));\r\n    dispatch(addJokes(jokeList));\r\n  } catch (e) {\r\n    dispatch(addJokes([]));\r\n    let component = uiComponents.JOKES_LIST_COMPONENT;\r\n    if (e.status === jokesService.INTERNET_DISCONNECTED_ERROR) {\r\n      component = uiComponents.APP_COMPONENT;\r\n    }\r\n    dispatch(setError(component, e));\r\n  }\r\n  dispatch(toggleLoader(uiComponents.JOKES_LIST_COMPONENT));\r\n};\r\n\r\nconst getJokes = (state) => async (dispatch) => {\r\n  switch (state.filterType) {\r\n    case filterTypeSet.RANDOM:\r\n      getJokeService(null, dispatch, jokesService.getRandomJoke.bind(jokesService));\r\n      break;\r\n    case filterTypeSet.CATEGORY:\r\n      getJokeService(state.currentCategory, dispatch, jokesService.getJokeByCategory.bind(jokesService));\r\n      break;\r\n    case filterTypeSet.SEARCH:\r\n      getJokeService(state.query, dispatch, jokesService.searchJoke.bind(jokesService));\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nconst toggleJokeLove = (joke = {}) => (dispatch) => {\r\n  const favouriteJokes = jokesLocalStorage.getFavouriteJokes();\r\n  const loved = favouriteJokes.some((favJoke) => favJoke.id === joke.id);\r\n\r\n  let updatedFavJokeList = [];\r\n  if (loved) {\r\n    updatedFavJokeList = favouriteJokes.filter((favJoke) => favJoke.id !== joke.id);\r\n    dispatch(removeFavouriteJoke(joke.id));\r\n  } else {\r\n    const favJoke = { ...joke, loved: true };\r\n    updatedFavJokeList = [...favouriteJokes, favJoke];\r\n    dispatch(addFavouriteJokes([favJoke]));\r\n  }\r\n  dispatch(updateJokeField(joke.id, \"loved\", !loved));\r\n  jokesLocalStorage.addFavouriteJokes(updatedFavJokeList);\r\n};\r\n\r\nconst loadFavouriteJokes = () => (dispatch) => {\r\n  dispatch(toggleLoader(uiComponents.FAV_LIST_COMPONENT));\r\n  const favouriteJokes = jokesLocalStorage.getFavouriteJokes();\r\n  dispatch(addFavouriteJokes(favouriteJokes));\r\n  dispatch(toggleLoader(uiComponents.FAV_LIST_COMPONENT));\r\n};\r\n\r\nexport {\r\n  jokesReducer as default,\r\n  filterTypeSet,\r\n  setFilterType,\r\n  updateQueryString,\r\n  toggleJokeLove,\r\n  getJokes,\r\n  loadFavouriteJokes,\r\n  addJokes,\r\n  addFavouriteJokes,\r\n  removeFavouriteJoke,\r\n};\r\n","import { jokesService } from \"services\";\r\nimport { toggleLoader, uiComponents } from \"./uiStateReducer\";\r\n\r\n// Actions types\r\nconst CREATE_CATEGORY_LIST = \"categoriesReducer/CREATE_CATEGORY_LIST\";\r\nconst UPDATE_CURRENT_CATEGORY = \"categoriesReducer/UPDATE_CURRENT_CATEGORY\";\r\n\r\n// Categories reducers\r\nconst initialState = {\r\n  categories: [],\r\n  currentCategory: \"\",\r\n};\r\n\r\nconst categories = (state = initialState.categories, action) => {\r\n  switch (action.type) {\r\n    case CREATE_CATEGORY_LIST:\r\n      return [...action.payload.value];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst currentCategory = (state = initialState.currentCategory, action) => {\r\n  if (action.type === UPDATE_CURRENT_CATEGORY) return action.payload.value;\r\n  return state;\r\n};\r\n\r\nconst categoriesReducer = (state = initialState, action) => {\r\n  return {\r\n    categories: categories(state.categories, action),\r\n    currentCategory: currentCategory(state.currentCategory, action),\r\n  };\r\n};\r\n\r\n// Actions creators\r\nconst createCategoryList = (list) => ({\r\n  type: CREATE_CATEGORY_LIST,\r\n  payload: { value: list },\r\n});\r\n\r\nconst selectCategory = (categoryName) => ({\r\n  type: UPDATE_CURRENT_CATEGORY,\r\n  payload: { value: categoryName },\r\n});\r\n\r\n// Thunk creators\r\nconst initCategories = () => async (dispatch) => {\r\n  const list = await jokesService.getCategories();\r\n  dispatch(createCategoryList(list));\r\n  const firstCategory = list.length && list[0];\r\n  if (firstCategory) {\r\n    dispatch(selectCategory(firstCategory));\r\n  }\r\n  dispatch(toggleLoader(uiComponents.CATEGORY_LIST_COMPONENT));\r\n};\r\n\r\nexport { categoriesReducer as default, initCategories, selectCategory, createCategoryList };\r\n","import React from \"react\";\r\n\r\nconst ErrorMessage = (props) => {\r\n  const { error } = props;\r\n  if (!error) return null;\r\n\r\n  const showError = () => {\r\n    let { message, originError } = error;\r\n\r\n    if (originError && originError.message) {\r\n      message = originError.message;\r\n    }\r\n    return <section className=\"error-message\">{message}</section>;\r\n  };\r\n\r\n  return showError();\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return <div className=\"loader\"></div>;\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { initCategories, selectCategory } from \"redux/reducers/categoriesReducer\";\r\nimport { uiComponents } from \"redux/reducers/uiStateReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { Loader } from \"ui\";\r\n\r\nconst Categories = (props) => {\r\n  const { show, isLoading, categories, initCategories, selectCategory, currentCategory } = props;\r\n\r\n  useEffect(() => {\r\n    if (show && !categories.length) {\r\n      initCategories();\r\n    }\r\n  });\r\n\r\n  const clickCategoryHandler = (categoryName) => () => selectCategory(categoryName);\r\n\r\n  const showCategories = () => {\r\n    const categoryStyle = (categoryName) =>\r\n      classNames({ button: true, \"category__tag-btn\": true, active: categoryName === currentCategory });\r\n\r\n    const categoryElementList = categories.map((categoryName) => {\r\n      return (\r\n        <li key={categoryName} className=\"category__tag category__list-item\">\r\n          <button className={categoryStyle(categoryName)} onClick={clickCategoryHandler(categoryName)} type=\"button\">\r\n            {categoryName}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n    if (!show) return;\r\n\r\n    return isLoading ? <Loader /> : categoryElementList;\r\n  };\r\n\r\n  return <ul className=\"category__list\">{showCategories()}</ul>;\r\n};\r\n\r\nconst mapStateToProps = ({ categories: { categories, currentCategory }, uiState }) => ({\r\n  categories,\r\n  currentCategory,\r\n  isLoading: uiState.loading[uiComponents.CATEGORY_LIST_COMPONENT],\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  initCategories,\r\n  selectCategory,\r\n})(Categories);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setFilterType, updateQueryString, toggleJokeLove, getJokes } from \"redux/reducers/jokesReducer\";\r\nimport classNames from \"classnames\";\r\nimport Categories from \"components/Categories\";\r\n\r\nconst ENTER_KEY_CODE = \"Enter\";\r\n\r\nconst FilterForm = (props) => {\r\n  const { state, getJokes, updateQueryString, setFilterType } = props;\r\n  const inputElementConfigs = [\r\n    { name: \"random\", label: \"Random\" },\r\n    { name: \"category\", label: \"From caterogies\" },\r\n    { name: \"search\", label: \"Search\" },\r\n  ];\r\n\r\n  // Event handlers\r\n  const getJokesHandler = () => {\r\n    getJokes(state);\r\n  };\r\n\r\n  const updateFilterType = (e) => {\r\n    if (e.target.checked) {\r\n      setFilterType(e.target.value);\r\n    }\r\n  };\r\n\r\n  const updateSearchField = (e) => {\r\n    updateQueryString(e.target.value);\r\n  };\r\n\r\n  const keyPressHandler = (e) => {\r\n    if (e.key === ENTER_KEY_CODE) {\r\n      getJokes(state);\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  // UI elements\r\n\r\n  const [randomInput, categoryInput, searchInput] = inputElementConfigs.map(({ name, label }) => {\r\n    const inputId = `joke-${name}`;\r\n    return (\r\n      <>\r\n        <input\r\n          className={`radio-input form__${name}`}\r\n          type=\"radio\"\r\n          id={inputId}\r\n          name=\"search\"\r\n          value={`${name}`}\r\n          onChange={updateFilterType}\r\n          defaultChecked={state.filterType === name.toUpperCase()}\r\n        />\r\n        <label className=\"radio-label\" htmlFor={inputId}>\r\n          {label}\r\n        </label>\r\n      </>\r\n    );\r\n  });\r\n\r\n  const isActiveFilter = (name) => name.toUpperCase() === state.filterType;\r\n\r\n  const styleFilterType = (mainClass, ...classList) =>\r\n    classNames(mainClass, ...classList, \"filter-type\", {\r\n      active: isActiveFilter(mainClass),\r\n    });\r\n\r\n  return (\r\n    <form className=\"filter-form form\">\r\n      <p className={styleFilterType(\"random\")}>{randomInput}</p>\r\n\r\n      <div className={styleFilterType(\"category\")}>\r\n        {categoryInput}\r\n        <Categories show={isActiveFilter(\"category\")} />\r\n      </div>\r\n\r\n      <div className={styleFilterType(\"search\")}>\r\n        <p>{searchInput}</p>\r\n\r\n        <input\r\n          className=\"form__search-input\"\r\n          onKeyDown={keyPressHandler}\r\n          onChange={updateSearchField}\r\n          type=\"text\"\r\n          value={state.query}\r\n          placeholder=\"Free text search...\"\r\n        />\r\n      </div>\r\n\r\n      <button className=\"button form__search-btn\" type=\"button\" onClick={getJokesHandler}>\r\n        Get a joke\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ jokes }) => {\r\n  const { query, filterType, list: jokeList } = jokes;\r\n  return {\r\n    state: {\r\n      filterType,\r\n      query,\r\n      jokeList,\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setFilterType,\r\n  updateQueryString,\r\n  toggleJokeLove,\r\n  getJokes,\r\n})(FilterForm);\r\n","import React from \"react\";\r\nimport heartIcon from \"assets/images/home-page/joke-card/heart.svg\";\r\nimport heartInactiveIcon from \"assets/images/home-page/joke-card/heart-inactive.svg\";\r\nimport textIcon from \"assets/images/home-page/joke-card/text-icon.svg\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleJokeLove } from \"redux/reducers/jokesReducer\";\r\nimport { formatDateToHours } from \"utils/date\";\r\n\r\nconst JokeCard = (props) => {\r\n  const { styleClassPrefix: prefix, data, toggleJokeLove, showTag = true } = props;\r\n  const { id = \"\", url = \"\", value: text = \"\", updatedAt = \"\", categories = [] } = data || {};\r\n\r\n  const loveJokeHandler = () => {\r\n    toggleJokeLove(data);\r\n  };\r\n\r\n  // Header\r\n  const cardHeader = (\r\n    <header className={`jokecard-header ${prefix}__item-header`}>\r\n      <button className={`button pin-btn ${prefix}__item-pin`} onClick={loveJokeHandler}>\r\n        <img className={`pin-btn__img`} src={data.loved ? heartIcon : heartInactiveIcon} alt=\"heart button\" />\r\n      </button>\r\n    </header>\r\n  );\r\n  // Body\r\n  const cardBody = (\r\n    <main className={`jokecard-body ${prefix}__item-body`}>\r\n      <div className={`jokecard__inner ${prefix}__body-inner`}>\r\n        <div className={`jokecard-img ${prefix}__item-img`} style={{ backgroundImage: `url(${textIcon})` }}></div>\r\n        <section className={`jokecard-desc ${prefix}__item-desc`}>\r\n          <section className={`jokecard-id ${prefix}__item-id`}>\r\n            <span className={`jokecard-label ${prefix}__item-label`}>ID:</span>\r\n            <a href={url} className={`jokecard-id__link ${prefix}__item-link`}>\r\n              {id}\r\n            </a>\r\n          </section>\r\n          <section className={`jokecard-text ${prefix}__item-text`}>{text}</section>\r\n        </section>\r\n      </div>\r\n    </main>\r\n  );\r\n  // Footer\r\n  const tagElementList = categories.map((tag) => (\r\n    <span key={tag} className={`jokecard-tag ${prefix}__item-tag`}>\r\n      {tag}\r\n    </span>\r\n  ));\r\n  const cardFooter = (\r\n    <footer className={`jokecard-footer ${prefix}__item-footer`}>\r\n      <span className={`jokecard-updated ${prefix}__item-update`}>\r\n        Last update: {`${formatDateToHours(updatedAt)} hours ago`}\r\n      </span>\r\n      {showTag && tagElementList}\r\n    </footer>\r\n  );\r\n\r\n  return (\r\n    <article className={`jokecard ${prefix}-joke ${prefix}__item`}>\r\n      {cardHeader}\r\n      {cardBody}\r\n      {cardFooter}\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default connect(null, { toggleJokeLove })(JokeCard);\r\n","const MILLISECONDS = 1000;\r\nconst MINUTES = 60;\r\nconst HOURS = 60;\r\n\r\nconst formatDateToHours = (date) =>\r\n  Math.round((new Date().getTime() - new Date(date).getTime()) / (MILLISECONDS * MINUTES * HOURS));\r\n\r\nexport { formatDateToHours };\r\n","import React, { useEffect } from \"react\";\r\nimport JokeCard from \"components/JokeCard\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadFavouriteJokes } from \"redux/reducers/jokesReducer\";\r\nimport { toggleFavList, uiComponents } from \"redux/reducers/uiStateReducer\";\r\nimport classNames from \"classnames\";\r\nimport { Loader } from \"ui\";\r\n\r\nconst FavList = (props) => {\r\n  const { state, loadFavouriteJokes, toggleFavList } = props;\r\n\r\n  useEffect(() => {\r\n    loadFavouriteJokes();\r\n  }, []);\r\n\r\n  const menuButtonClick = (e) => {\r\n    e.stopPropagation();\r\n    toggleFavList();\r\n  };\r\n\r\n  const styleFavouritePanel = classNames(\"favourite\", { active: state.showOnMobile });\r\n\r\n  const showContent = () => {\r\n    const cardElementList = state.favourites.map((favJokeData) => (\r\n      <JokeCard key={favJokeData.id} styleClassPrefix=\"favourite\" data={favJokeData} showTag={false} />\r\n    ));\r\n\r\n    return state.isLoading ? <Loader /> : cardElementList;\r\n  };\r\n\r\n  const asideHeader = (\r\n    <header className=\"favourite-header\">\r\n      {state.showOnMobile ? (\r\n        <button className=\"button menu-btn favourite__menu-btn\" onClick={menuButtonClick} type=\"button\">\r\n          Favourite\r\n        </button>\r\n      ) : (\r\n        <h3 className=\"favourite-title\">Favourite</h3>\r\n      )}\r\n    </header>\r\n  );\r\n  return (\r\n    <aside className={styleFavouritePanel}>\r\n      <section className=\"favourite-content\">\r\n        {asideHeader}\r\n        <section className=\"favourite__list\">{showContent()}</section>\r\n      </section>\r\n    </aside>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: {\r\n    favourites: state.jokes.favourites,\r\n    showOnMobile: state.uiState[uiComponents.FAV_LIST_COMPONENT].showOnMobile,\r\n    isLoading: state.uiState.loading[uiComponents.FAV_LIST_COMPONENT],\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  loadFavouriteJokes,\r\n  toggleFavList,\r\n})(FavList);\r\n","import React from \"react\";\r\nimport JokeCard from \"components/JokeCard\";\r\nimport { connect } from \"react-redux\";\r\nimport { Loader, ErrorMessage } from \"ui\";\r\nimport { uiComponents } from \"redux/reducers/uiStateReducer\";\r\n\r\nconst JokesList = (props) => {\r\n  const { jokes, error, isLoading } = props;\r\n\r\n  const showJokeList = () => {\r\n    const jokeElementList = jokes.map((jokeData) => {\r\n      return <JokeCard key={jokeData.id} styleClassPrefix=\"filtered\" data={jokeData} />;\r\n    });\r\n    return (\r\n      <>\r\n        {isLoading && <Loader />}\r\n        {<ErrorMessage error={error} />}\r\n        {!(isLoading && error) && jokeElementList}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <section className=\"filtered\">{showJokeList()}</section>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  jokes: state.jokes.list,\r\n  isLoading: state.uiState.loading[uiComponents.JOKES_LIST_COMPONENT],\r\n  error: state.uiState.error[uiComponents.JOKES_LIST_COMPONENT],\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(JokesList);\r\n","import React from \"react\";\r\nimport Header from \"components/Header\";\r\nimport FilterForm from \"components/FilterForm\";\r\nimport FavList from \"components/FavList\";\r\nimport JokesList from \"components/JokesList\";\r\nimport GlobalErrorMessage from \"ui/GlobalErrorMessage\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <section className=\"wrapper\">\r\n      <Header />\r\n      <section className=\"content\">\r\n        <div className=\"container\">\r\n          <div className=\"promo\">\r\n            <h2 className=\"promo-title\">Hey!</h2>\r\n            <h3 className=\"promo-subtitle\">Let’s try to find a joke for you:</h3>\r\n          </div>\r\n          {/* <GlobalErrorMessage /> */}\r\n          <FilterForm />\r\n          <JokesList />\r\n        </div>\r\n      </section>\r\n      <FavList />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { default as jokes } from \"./jokesReducer\";\r\nimport { default as categories } from \"./categoriesReducer\";\r\nimport { default as uiState } from \"./uiStateReducer\";\r\n\r\nconst reducers = {\r\n  jokes,\r\n  categories,\r\n  uiState,\r\n};\r\n\r\nexport default reducers;\r\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst state = combineReducers(reducers);\r\nconst store = createStore(state, applyMiddleware(thunkMiddleware));\r\n\r\nexport { store as default };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"components/App\";\r\nimport \"styles/index.scss\";\r\nimport store from \"redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}